#
# set paths for header files and libraries
#

CUDA		:= $(CUDA_INSTALL_PATH)
INC		:= -I$(CUDA)/include -I.
LIB		:= -L$(CUDA)/lib64

#
# set flags for compilation and linking
#

CCFLAGS		:= -g -fPIC -DUNIX -Wall -Wextra
NVCCFLAGS	:= -g -G -arch=sm_20 -Xptxas=-v -use_fast_math
LIBS		:= -lcudart

#
# master to make all versions
#

all:		airfoil_seq airfoil_op airfoil_cuda

#
# simple sequential version
#

airfoil_seq:	airfoil.cpp op_seq.cpp op_datatypes.h
		g++ -o airfoil_seq airfoil.cpp op_seq.cpp

#
# x86 version using kernel files generated by op2.m
#

airfoil_op:	airfoil_op.cpp airfoil_kernels.cpp op_datatypes.h \
		save_soln_kernel.cpp save_soln.h \
		adt_calc_kernel.cpp  adt_calc.h \
		res_calc_kernel.cpp  res_calc.h \
		update_kernel.cpp    update.h
		g++ -o airfoil_op airfoil_op.cpp airfoil_kernels.cpp

#
# CUDA version using kernel files generated by op2.m
#

airfoil_cuda:	airfoil_op.o airfoil_kernels.o
		g++ -fPIC -o airfoil_cuda airfoil_op.o airfoil_kernels.o $(LIB) $(LIBS)

airfoil_op.o:	airfoil_op.cpp op_datatypes.h
		g++ -c $(CCFLAGS) -o airfoil_op.o airfoil_op.cpp

airfoil_kernels.o:	airfoil_kernels.cu op_lib.cu op_datatypes.h \
		save_soln_kernel.cu save_soln.h \
		adt_calc_kernel.cu  adt_calc.h \
		res_calc_kernel.cu  res_calc.h \
		update_kernel.cu    update.h
		nvcc -c $(INC) $(NVCCFLAGS) -o airfoil_kernels.o airfoil_kernels.cu

#
# cleanup
#

clean:
		rm -f airfoil_seq airfoil_op airfoil_cuda \
                airfoil_op.o airfoil_kernels.o
